.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds LF R Jones 
.ds RF FORMFEED[Page %]
.ds LH SWORD 002
.ds RH January 2011
.ds CH AtomPub Extensions for Packaged COntent
.ds CF Expires July 2011
.hy 0
.nh
.ad l
.in 0

.nf
.tl 'INTERNET-DRAFT''R Jones'
.tl 'Intended Status: Experimental''(OneOverZero/SWORD)'
.tl 'Expires: July 2011''January 2011'
.tl 'SWORD 002'''
.fi

.\" Note. The ".tl" directive is used to generate the leading header 
.\" in Internet drafts. The information specified after ".tl" provides
.\" left, center and right components of a line separated by the ' character
.\" in the following manner:
.\" 
.\"  .tl '<left component>'<center component>'<right component>'
.\"
.\" Only the left and right components are used in Internet-draft headers
.\" This and other comments in this template can safely be deleted.

.ce 2
AtomPub Extensions for Packaged Content
.fi
.in 3


.ti 0
Status of this Memo

This memo defines an Experimental Protocol for the Internet community.  This memo does not specify an Internet standard of any kind.  Discussion and suggestions for improvement are requested.  Distribution of this memo is unlimited.


.ti 0
Copyright and License Notice\" Boilerplate from December 2009

Copyright (C) SWORD (2011).  All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works.  However, this document itself may not be modified in any way, such as by removing the copyright notice or references to SWORD, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by SWORD or its successors or assigns.

This document and the information contained herein is provided on an "AS IS" basis and SWORD DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

.bp
.ti 0
Abstract

The Atom Publishing Protocol [RFC5023] defines how to create a Media Resource by POSTing the media to a server.  It deals exclusively with the upload of a single file to the Media Entry, and does not make explicit allowances for the possibility that this file may be a package or bundle of other files in a particular format.  This specification covers extensions to the protocol to support this extra condition.


.\" \# TD4  -- Set TOC depth by altering this value (TD5 = depth 5)
.\" \# TOC  -- Beginning of auto updated Table of Contents
.in 0
Table of Contents

.nf
   1  Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . 3
      1.1  Terminology . . . . . . . . . . . . . . . . . . . . . . . . 3
      1.2 Namespaces . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2  Service Document Extensions  . . . . . . . . . . . . . . . . . . 3
      2.1 sword:mediation  . . . . . . . . . . . . . . . . . . . . . . 3
      2.2 sword:acceptPackaging  . . . . . . . . . . . . . . . . . . . 4
   3 Media Entry Extensions  . . . . . . . . . . . . . . . . . . . . . 5
      3.1 sword:packaging  . . . . . . . . . . . . . . . . . . . . . . 5
   4 Packaged Content Delivery over HTTP with AtomPub  . . . . . . . . 6
      4.1 Discovering Supported Packaging Formats for Delivery . . . . 6
      4.2 Delivering Packaged Content  . . . . . . . . . . . . . . . . 6
      4.3 Discovering Supported Package Formats for Retrieval  . . . . 7
      4.4 Retrieving Packaged Content  . . . . . . . . . . . . . . . . 7
   9  References . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
      9.1  Normative References  . . . . . . . . . . . . . . . . . . . 8
   Author's Addresses  . . . . . . . . . . . . . . . . . . . . . . . . 8
.fi
.in 3

.\" \# ETC -- End of auto updated Table of Contents

.bp
.ti 0
1  Introduction

This specification defines a set of extensions to the Atom Publishing Protocol [RFC5023] to support the transfer and recovering of content packages via the standard.

.ti 0
1.1  Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [RFC2119].

.ti 0
1.2 Namespaces

All extensions are defined within the namespace:

    http://purl.org/net/sword/

This document uses the prefix "sword" for the namespace name.

The AtomPub namespace is:

    http://www.w3.org/2007/app

This document uses the prefix "app" for the namespace name.

The Atom Syndication Format namespace is:

    http://www.w3.org/2005/Atom

This document uses the prefix "atom" for the namespace name.

.ti 0
2  Service Document Extensions

This section documents extensions to the Atom Service Document.

.ti 0
2.1 sword:mediation

The sword:mediation element MUST be used to determine if a Media Collection will accept the deposit of content on behalf of a user other than the authenticated depositor.  If it is not present the client MUST assume that the server does not support such mediated deposit.

Traditional HTTP authentication is often insufficient during package deposit, as it is possible that content will be delivered machine-to-machine and the authenticating user will be the user agent not the content owner.  The presence of the sword:mediation element, which MUST take a "true" or "false" value, indicates whether the On-Behalf-Of HTTP header [SWORD001] can be used to provide the server with a user other than the authenticated one who should be considered the actor in the transfer.

For example:

.nf
    <service xmlns="http://www.w3.org/2007/app"
             xmlns:sword="http://purl.org/net/sword/terms/"
             xmlns:atom="http://www.w3.org/2005/Atom">
      <workspace>

        <atom:title>Main Site</atom:title>

        <collection href="http://www.appserver.org/col1">
          <atom:title>Collection 1</atom:title>
          <accept>*/*</accept>
          <sword:mediation>true</sword:mediation>
        </collection>

      </workspace>
    </service>
.fi

.ti 0
2.2 sword:acceptPackaging

The sword:acceptPackaging element SHOULD be used to indicate to the user agent what package formats are acceptable to send to the server.  If the server does not supply an element, the client MUST assume that the server only supports an ordinary, unstructured zip file.  The server MAY unzip any such files, or MAY store them as opaque binary files.  The sword:acceptPackaging element SHOULD contain a URI identifying the packaging format, but MAY contain any text string which can be understood by servers and user agents.

For example:

.nf
    <service xmlns="http://www.w3.org/2007/app"
             xmlns:sword="http://purl.org/net/sword/terms/"
             xmlns:atom="http://www.w3.org/2005/Atom">
      <workspace>

        <atom:title>Main Site</atom:title>

        <collection href="http://www.appserver.org/col1">
          <atom:title>Collection 1</atom:title>
          <accept>*/*</accept>
          <sword:acceptPackaging>
		http://purl.org/net/sword/package/BagIt
	</sword:acceptPackaging>
          <sword:acceptPackaging>
		http://purl.org/net/sword/package/METSDSpaceSIP
	</sword:acceptPackaging>
        </collection>

      </workspace>
    </service>
.fi

.ti 0
3 Media Entry Extensions

This section documents extensions to the Media Entry document which can be retrieved from the server from the Media Entry URI.

.ti 0
3.1 sword:packaging

The sword:packaging element SHOULD be used by the server to indicate the packaging formats that it is capable of delivering the Media Resource to the user agent in.  If there is no sword:packaging element, the user agent MUST NOT assume any packaging format; instead it must rely on the atom:content@type as normal, per [RFC5023].  If a sword:packaging element is provided the user agent MAY request the atom:content@src URI with the Packaging HTTP header [SWORD001] containing the value of the sword:packaging element.

The value of the sword:packaging element SHOULD contain a URI identifying the packaging format, but MAY contain any text string which can be understood by servers and user agents.

For example:

.nf
  <entry xmlns="http://www.w3.org/2005/Atom"
	 xmlns:sword="http://purl.org/net/sword/">

     <title>My Deposit</title>
     <id>info:something:1</id>

     <updated>2008-08-18T14:27:08Z</updated>
     <author><name>jbloggs</name></author>
     <summary type="text">A summary</summary>
     <generator uri="http://www.appserver.org/engine" version="1.0"/>

     <content type="application/zip"
        src="http://www.appserver.org/col1/deposit1.zip"/>	
     <sword:packaging>
        http://purl.org/net/sword/package/METSDSpaceSIP
     </sword:packaging>
     <link rel="edit"
        href="http://www.appserver.org/col1/my_deposit.atom" />

  </entry>
.fi

.ti 0
4 Packaged Content Delivery over HTTP with AtomPub

A walkthrough of the process of delivering and retrieving packaged content with a combination of the extensions described in this specification and those detailed in [SWORD001].

.ti 0
4.1 Discovering Supported Packaging Formats for Delivery

The user agent requests the Service Document from the server, which contains the sword:mediation and sword:acceptPackaging elements.  If the sword:mediation element is present and set to "true", this tells the user agent that it can use the On-Behalf-Of HTTP header [SWORD001] when delivering the packaged content.  The sword:acceptPackaging header tells the user agent what packaging formats it can use to deliver that content.

.nf
    <service xmlns="http://www.w3.org/2007/app"
             xmlns:sword="http://purl.org/net/sword/terms/"
             xmlns:atom="http://www.w3.org/2005/Atom">
      <workspace>

        <atom:title>Main Site</atom:title>

        <collection href="http://www.appserver.org/col1">
          <atom:title>Collection 1</atom:title>
          <accept>application/zip</accept>
          <sword:mediation>true</sword:mediation>
          <sword:acceptPackaging>
	  http://purl.org/net/sword/package/BagIt
	</sword:acceptPackaging>
        </collection>

      </workspace>
    </service>
.fi

.ti 0
4.2 Delivering Packaged Content

The user agent constructs a content package which meets the criteria laid out in the app:accept and sword:acceptPackaging headers in the Service Document; for example an application/zip BagIt packaged file.  This is delivered to the server as a standard POST of a Media Resource:

    POST /col1 HTTP/1.1
    On-Behalf-Of: jbloggs
    Packaging: http://purl.org/net/sword/package/BagIt
    Content-Type: application/zip

The response to this MUST be as laid out in [SWORD001]

.ti 0
4.3 Discovering Supported Package Formats for Retrieval

The supported formats for retrieval are listed in the Media Entry document in the sword:packaging element.  The user agent can retrieve this document from the Media Entry URI, and discover the URI for the content of the Media Resource and the supported package formats.

.nf
  <entry xmlns="http://www.w3.org/2005/Atom"
	 xmlns:sword="http://purl.org/net/sword/">

     <title>My Deposit</title>
     <id>info:something:1</id>

     <updated>2008-08-18T14:27:08Z</updated>
     <author><name>jbloggs</name></author>
     <summary type="text">A summary</summary>
     <generator uri="http://www.appserver.org/engine" version="1.0"/>

     <content type="application/zip"
        src="http://www.appserver.org/col1/deposit1.zip"/>	
     <sword:packaging>
          http://purl.org/net/sword/package/BagIt
     </sword:packaging>
     <sword:packaging>
          http://purl.org/net/sword/package/METSDSpaceSIP
     </sword:packaging>

     <link rel="edit"
        href="http://www.appserver.org/col1/my_deposit.atom" />

  </entry>
.fi

The presence of one or more sword:packaging elements tells the user agent that it can request the Media Resource using the Packaging HTTP header [SWORD001] to indicate its desired format.

.ti 0
4.4 Retrieving Packaged Content

The user agent issues an HTTP GET request on the Media Resource URI and specifies the Packaging HTTP header [SWORD001], as follows:

    GET /col1/deposit1.zip HTTP/1.1
    Packaging: http://purl.org/net/sword/package/BagIt

The server returns the Media Resource packaged as a BagIt zip file.  If the server does not support the requested format it MUST respond as described in [SWORD001].

.ti 0
9  References 

.ti 0 
9.1  Normative References

.in 15
.ti 3
[RFC2119]   S. Bradner, "Key words for use in RFCs to Indicate Requirement Levels", BCP\014, RFC\02119, March 1997.

.ti 3
[RFC5023]  Gregorio, J. and B. de hOra, "The Atom Publishing Protocol", RFC 5023, October 2007.

.ti 3
[SWORD001] Jones, R, "Packaged Content Delivery over HTTP", Internet-Draft, February 2011

.ti 0
Author's Addresses

.sp
.nf
Richard Jones
c/o UKOLN
University of Bath

EMail: richard@swordapp.org
.sp
.fi

